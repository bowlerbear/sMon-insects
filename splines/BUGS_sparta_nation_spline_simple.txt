
  model{
    
    # State model
    
    #### GAM priors from mgcv::jagam()
    
    ## Intercept
    for (i in 1:1) {
      b[i] ~ dnorm(0,0.05)
    }
    
    ## Spline: s(x,y)
    K1 <- S1[1:4,1:4] * lambda[1]  + S1[1:4,5:8] * lambda[2]
    b[2:5] ~ dmnorm(zero[2:5],K1) 
    
    ## smoothing parameter priors
    for(i in 1:2) {
      lambda[i] ~ dgamma(.05,.005)
      rho[i] <- log(lambda[i])
    }
    
    ## Year trend
    year.effect ~ dnorm(0,0.001)
    
    #Model
    for (i in 1:nsite){ 
      for (t in 1:nyear){
      
        logit(psi[i, t]) <- inprod(X[i,], b[]) + year.effect * t
        
        z[i, t] ~ dbern(psi[i, t])
        
      }
    }   
    
    #pull out first and last
    psi_1 <- psi[,1]
    psi_n <- psi[,nyear]
    
    #predict to full extent
    #for (i in 1:nsite_Full){ 
    #  for (t in 1:nyear){
    #    logit(psi_Full[i, t]) <- inprod(X_Full[i,], b[, t]) 
    #  }
    #}  
    
    ### Observation Model
    for(j in 1:nvisit) {
    
    y[j] ~ dbern(Py[j]) #data is Y 
    Py[j]<- z[site[j],year[j]]*p[j] 
    
    #detection model:
    logit(p[j]) <-  mup[year[j]] + 
                    mu.phenol * yday[j] + 
                    mu.phenol2 * yday2[j]+
                    effort.p * Effort[j] +
                    single.p * singleList[j]
    } 
    
    # Derived parameters
  
    
    #detection probability
    mean.p <- mean(p)
    
    #Observation model priors

    #year
    for(t in 1:nyear){
      mup[t] ~ dnorm(mu.p, tau.ap)
    }
    mu.p ~ dnorm(0, 0.01)
    tau.ap <- 1/(sd.ap * sd.ap)
    sd.ap ~ dunif(0,10)
    
    #effort effects
    effort.p ~ dnorm(0, 0.001)
    single.p ~ dnorm(0, 0.001)
    
    #phenology effects
    mu.phenol ~ dnorm(0,0.001)
    mu.phenol2 ~ dnorm(0,0.001)
 
    
  }
    
