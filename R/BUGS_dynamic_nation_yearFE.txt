
  model{

  # State model

  #fixed year and state but random year

  for (i in 1:nsite){ 
    
    #first year/initial occupancy, model
    z[i,1] ~ dbern(psi1[i])
    logit(psi1[i]) <- state.a[stateS[i]]

    #subsequent years
    for (t in 2:nyear){
      z[i,t] ~ dbern(muZ[i,t]) 

      #overall model
      muZ[i,t] <- persist[i,t-1]*z[i,t-1] + colonize[i,t-1]*(1-z[i,t-1])
      
      #persistence occupancy model
      logit(persist[i,t-1]) <- lphi[stateS[i]] 

      #colonization occupancy model
      logit(colonize[i,t-1]) <- lgam[stateS[i]] 
    }
  }   
 
  ### Observation Model
  for(j in 1:nvisit) {
    y[j] ~ dbern(Py[j]) #data is Y
    Py[j]<- z[site[j],year[j]]*p[j] 

    #detection model:
    logit(p[j]) <-  int.p
    } 
  
  # Derived parameters

  #metapopulation-level
   for(t in 1:nyear){
      psi.fs[t] <- sum(z[,t])/nsite
   }

  #overall
    psi.total.change <- psi.fs[nyear] - psi.fs[1]
    mean.p <- mean(p)#mean detection probability


    #state change
    for(s in 1:nstate){
      for(t in 1:nyear){
        psi.state[s,t] <- sum(z[,t] * siteStates[,s])/nsiteState[s]
      }
    }
    
    #mean per state

    for(s in 1:nstate){
      psi.state.mean[s] <- mean(psi.state[s,])
      psi.state.change[s] <- psi.state[s,nyear]-psi.state[s,1]
    }


  #Priors 

  # State model priors
  
  ####################################
  #spatial effect year 1 model

    #state.a fixed effects
    for (s in 1:nstate) {
      state.a[s] ~ dnorm(0,0.05)  
    } 

    #site.a random effects
    for (s in 1:nsite) {
      site.a[s] ~ dnorm(0, tau.site.a)       
    } 
    tau.site.a <- 1/(sd.site.a * sd.site.a)
    sd.site.a ~ dt(0, 1, 1)T(0,)

###############################################

  #temporal intercepts
  
    #year effects - fixed effects
    for(i in 2:(nyear-1)){
      muphi[i] ~ dnorm(0,0.05)
      mugam[i] ~ dnorm(0,0.05)
    }
    muphi[1] <- 0
    mugam[1] <- 0    

   #fixed state variation
    for(s in 1:nstate){
      lphi[s] ~ dnorm(0,0.05)
      lgam[s] ~ dnorm(0,0.05)
    }

    #random site variation
    tau.site.phi <- 1/(sd.site.phi * sd.site.phi)
    tau.site.gam <- 1/(sd.site.gam * sd.site.gam)
    sd.site.phi ~ dt(0, 1, 1)T(0,)
    sd.site.gam ~ dt(0, 1, 1)T(0,)
    
    for(s in 1:nsite){
      lphi.site[s] ~ dnorm(0,tau.site.phi)
      lgam.site[s]  ~ dnorm(0,tau.site.gam)
    }

    #############################################
    #Observation model priors
    int.p ~ dnorm(0,0.01)
    
  }

    
