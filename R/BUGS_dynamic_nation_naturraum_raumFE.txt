
  model{
    
    # State model
    
    for (i in 1:nsite){ 
    
    #first year/initial occupancy, model
    
    #data distribution
    z[i,1] ~ dbern(psi1[i])
    
    logit(psi1[i]) <- r.a[raumS[i]] + cr.a[craumS[i]] 

    for (t in 2:nyear){
    
    #data distribution
      z[i,t] ~ dbern(muZ[i,t]) 
    
    #overall model
      muZ[i,t] <- persist[i,t-1]*z[i,t-1] + colonize[i,t-1]*(1-z[i,t-1])
    
    #persistence occupancy model
      logit(persist[i,t-1]) <- muphi[t-1] + cr.p[craumS[i]] 
    
    #colonization occupancy model
      logit(colonize[i,t-1]) <- mugam[t-1] + cr.c[craumS[i]] 

      }
    }   
    
    ### Observation Model
    for(j in 1:nvisit) {
    y[j] ~ dbern(Py[j]) #data is Y
    Py[j]<- z[site[j],year[j]]*p[j] 
    
    #detection model:
    logit(p[j]) <-  mup[year[j]] + 
                    lp[craum[j]] +
                    lp.r[raum[j]] +
                    phenol.s[craum[j]] * yday[j] + 
                    phenol2.s[craum[j]] * pow(yday[j],2)+
                    effort.p * Effort[j] +
                    single.p * singleList[j]
    } 
    
    # Derived parameters
    
    #metapopulation-level
    for(t in 1:nyear){  
      psi.fs[t] <- sum(z[1:nsite,t])/nsite  
    } 

    # overall trend in occpuancy
    sumY <- sum(psi.fs[1:nyear])
    for (t in 1:nyear) {
      sumxy[t] <- psi.fs[t]*t
    }
    sumXY <- sum(sumxy[1:nyear])
    regres.psi <- (sumXY - ((sumX*sumY)/nyear))/(sumX2 - ((sumX*sumX)/nyear))#linear regression tren

    #raum level occupancies
    for(s in 1:ncraum){
      for(t in 1:nyear){
        psi.raum[s,t] <- sum(z[,t] * siteRaums[,s])/nsiteRaum[s]
      }
    }

    #state level occupancies
    for(s in 1:nstate){
      for(t in 1:nyear){
        psi.state[s,t] <- sum(z[,t] * siteStates[,s])/nsiteState[s]
      }
    }

    for(i in 1:nraum){
      for(t in 1:(nyear-1)){
        logit(persist.raum[i,t]) <- muphi[t] + r.p[i] + cr.p[craumR[i]]
        logit(colonize.raum[i,t]) <- mugam[t] + r.c[i] + cr.c[craumR[i]] 
      }  
      sitePersist[i] <- mean(persist.raum[i,])
      siteColonize[i] <- mean(colonize.raum[i,])
    }
    meanPersist <- mean(sitePersist)
    meanColonize <- mean(siteColonize)
    
    #detection probability
    mean.p <- mean(p)

    #Priors 
    
    # State model priors
    
    ##########################################
    #year 1 spatial effects
    
    #cr.a fixed effects for couarse naturraum
    for (s in 1:ncraum) {
      cr.a.prop[s] ~ dunif(0.000001,priorS[s])
      cr.a[s] <- logit(cr.a.prop[s])     
    } 

    #r.a random effects for naturraum
    for (s in 1:nraum) {
      r.a[s] ~ dnorm(0, tau.r.a)       
    } 
    tau.r.a <- 1/(sd.r.a * sd.r.a)
    sd.r.a ~ dt(0, 1, 1)T(0,)

    #site.a random effects
    for (s in 1:nsite) {
      site.a[s] ~ dnorm(0, tau.site.a)       
    } 
    tau.site.a <- 1/(sd.site.a * sd.site.a)
    sd.site.a ~ dt(0, 1, 1)T(0,)
    
    ######################################
    #temporal change
    
    #spatial fixed effects - coarse natur raum
    for (s in 1:ncraum) {
      cr.p.prop[s] ~ dunif(0.000001,priorS[s])
      cr.p[s] <- logit(cr.p.prop[s])
    } 

    for (s in 1:ncraum) {
      cr.c.prop[s] ~ dunif(0.000001,priorS[s])
      cr.c[s] <- logit(cr.c.prop[s])
    } 
    
    #spatial random effects - natur raum
    for (s in 1:nraum) {
      r.p[s] ~ dnorm(0, tau.r.p)       
    } 
    tau.r.p <- 1/(sd.r.p * sd.r.p)
    sd.r.p ~ dt(0, 1, 1)T(0,)
    
    for (s in 1:nraum) {
      r.c[s] ~ dnorm(0, tau.r.c)       
    } 
    tau.r.c <- 1/(sd.r.c * sd.r.c)
    sd.r.c ~ dt(0, 1, 1)T(0,)
    
    #year effects - random effects

    tau.muphi <- 1/(sd.muphi * sd.muphi)
    tau.mugam <- 1/(sd.mugam * sd.mugam)
    sd.muphi ~ dt(0, 1, 1)T(0,)
    sd.mugam ~ dt(0, 1, 1)T(0,)
    for(i in 1:(nyear-1)){
      muphi[i] ~ dnorm(0,tau.muphi)
      mugam[i] ~ dnorm(0,tau.mugam)
    }
    
    #####################################################
    
    #Observation model priors
    
    #intercept
    int.dp ~ dnorm(0,0.1)
    
    #random year effects
    for(t in 1:nyear){
      mup[t]  ~ dnorm(0,tautp)
    }
    tautp <- 1/(sdtp * sdtp)
    sdtp ~ dt(0, 1, 1)T(0,)
    
    #naturraum-level variaion - fixed effects
    for(s in 1:ncraum){
      lp[s]  ~ dnorm(0,0.1)
    }

    #random site effects
    for(i in 1:nraum){
      lp.r[i]  ~ dnorm(0,tau.rp)
    }
    tau.rp <- 1/(sd.rp * sd.rp)
    sd.rp ~ dt(0, 1, 1)T(0,)
    
    #effort effects
    effort.p ~ dnorm(0, 0.1)
    single.p ~ dnorm(0, 0.1)
    
    #random slopes for phenology
    for(s in 1:ncraum){
      phenol.s[s] ~ dnorm(mu.phenol, tau.phenol)
      phenol2.s[s] ~ dnorm(mu.phenol2, tau.phenol2)
    }
    mu.phenol ~ dnorm(0,0.1)
    mu.phenol2 ~ dnorm(0,0.1)
    tau.phenol <- 1/(sd.phenol * sd.phenol)
    tau.phenol2 <- 1/(sd.phenol2 * sd.phenol2)
    sd.phenol ~ dt(0, 1, 1)T(0,)
    sd.phenol2 ~ dt(0, 1, 1)T(0,) 
    
  }
    
