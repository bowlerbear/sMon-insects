
  model{

  # State model
  
  #first year/initial occupancy, model
  for (i in 1:nsite){ 

    #data distribution
    z[i,1] ~ dbern(muZ[i,1])

    #model
    logit(muZ[i,1]) <- eta[i] + state.a[stateS[i]]
  }

  #subsequent years
  for (i in 1:nsite){ 
    for (t in 2:nyear){

      #data distribution
      z[i,t] ~ dbern(muZ[i,t]) 

      #overall model
      muZ[i,t] <- persist[i,t]*muZ[i,t-1] + colonize[i,t]*(1-muZ[i,t-1])

      #persistence occupancy model
      logit(persist[i,t]) <- state.persist[stateS[i],t] 

      #colonization occupancy model
      logit(colonize[i,t]) <- state.colonize[stateS[i],t] 
    }
  }   
 
  ### Observation Model
  for(j in 1:nvisit) {
    y[j] ~ dbern(Py[j]) #data is Y
    Py[j]<- z[site[j],year[j]]*p[j] 

    #detection model:
    logit(p[j]) <-  a.p[year[j]] + 
                    state.p[state[j]] +
                    phenol.p * yday[state[j]] + 
                    phenol2.p * pow(yday[state[j]], 2) + 
                    effort.p * Effort[j] +
                    single.p * singleList[j]
    } 
  
  # Derived parameters - annual occupancy
  for (t in 1:nyear) {  
    psi.fs[t] <- sum(z[1:nsite, t])/nsite
  } 

  for(s in 1:nstate){
    for(t in 1:nyear){
      state.psi <- state.a[s] + state.persist[s,t] + state.colonize[s,t]
    }
  }

  #Priors 

  # State model priors
    
    #year effects on persistence
    for (s in 1:nstate){
      for (t in 1:nyear) {
        state.persist[s,t] ~ dnorm(a.mu.persist, a.tau.persist)            
      }
    }
    state.persist[,1] <- 0
    a.mu.persist ~ dnorm(0, 0.01)
    a.tau.persist <- 1 / (a.sd.persist * a.sd.persist)                 
    a.sd.persist ~ dt(0, 1, 1)T(0,)

    #year effects on colonization
    for(s in 1:nstate){
      for (t in 1:nyear) {
        state.colonize[s,t] ~ dnorm(a.mu.colonize, a.tau.colonize)            
      }
    }
    state.colonize[,1] <- 0
    a.mu.colonize ~ dnorm(0, 0.01)
    a.tau.colonize <- 1 / (a.sd.colonize * a.sd.colonize)                 
    a.sd.colonize ~ dt(0, 1, 1)T(0,)

    #site effects
    for (i in 1:nsite) {
      eta[i] ~ dnorm(0, tau.eta)       
    } 
    tau.eta <- 1/(sd.eta * sd.eta) 
    sd.eta ~ dt(0, 1, 1)T(0,)

    #state.a effects
    for (i in 1:nstate) {
      state.a[i] ~ dnorm(mu.state.a, tau.state.a)       
    } 
    mu.state.a ~ dnorm(0,0.01)
    tau.state.a <- 1/(sd.state.a * sd.state.a) 
    sd.state.a ~ dt(0, 1, 1)T(0,)


    #Observation model priors 
    #year effects
    for (t in 1:nyear) {
      a.p[t] ~ dnorm(a.mu.p, a.tau.p)            
    }
    a.mu.p ~ dnorm(0, 0.01)
    a.tau.p <- 1 / (a.sd.p * a.sd.p)                 
    a.sd.p ~ dt(0, 1, 1)T(0,) 

    #observation model covariates
    #int.p.temp ~ dunif(0,1)
    #int.p <- logit(int.p.temp)
    effort.p ~ dnorm(0, 0.01)
    single.p ~ dnorm(0, 0.01)

    #state effects
    for (i in 1:nstate) {
      state.p[i] ~ dnorm(0, tau.state.p)       
    } 
    tau.state.p <- 1/(sd.state.p * sd.state.p) 
    sd.state.p ~ dt(0, 1, 1)T(0,)


    #random slopes for phenology
    for(s in 1:nstate){
      phenol.p[s] ~ dnorm(mu.phenol, tau.phenol)
      phenol2.p[s] ~ dnorm(mu.phenol2, tau.phenol2)
    }

    #random phenology effects
    mu.phenol ~ dnorm(0,0.001)
    mu.phenol2 ~ dnorm(0,0.001)
    tau.phenol <- pow(sd.phenol,-2)
    tau.phenol2 <- pow(sd.phenol2,-2)    
    sd.phenol ~ dt(0, 1, 1)T(0,) 
    sd.phenol2  ~ dt(0, 1, 1)T(0,) 
    
  }
    
