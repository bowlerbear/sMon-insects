
  model{
    
    # State model
    
    for (i in 1:nsite){ 
    
    #first year/initial occupancy, model
    
    #data distribution
    z[i,1] ~ dbern(psi1[i])
    
    logit(psi1[i]) <- mu + r.a[raumS[i]] + eta[i]
    
    for (t in 2:nyear){
    
      #data distribution
      z[i,t] ~ dbern(muZ[i,t]) 
    
      #overall model
      muZ[i,t] <- persist[i,t-1]*z[i,t-1] + colonize[i,t-1]*(1-z[i,t-1])
    
      #persistence occupancy model
      logit(persist[i,t-1]) <- int.p + muphi[t-1] + r.p[raumS[i]] + eta.persist[i] + i.year.persist[raumS[i],t-1]
    
      #colonization occupancy model
      logit(colonize[i,t-1]) <- int.c + mugam[t-1] + r.c[raumS[i]] + eta.colonize[i] + i.year.colonize[raumS[i],t-1] 
      }
    }   
    
    ### Observation Model
    for(j in 1:nvisit) {
      y[j] ~ dbern(Py[j]) #data is Y
      Py[j]<- z[site[j],year[j]]*p[j] 
    
      #detection model:
      logit(p[j]) <-  int.dp +
                      mup[year[j]] + 
                      lp[raum[j]] +
                      phenol.s[raum[j]] * yday[j] + 
                      phenol2.s[raum[j]] * pow(yday[j],2)+
                      effort.p * Effort[j] +
                      single.p * singleList[j]
    } 
    
  # Derived parameters
  
  #mean persistence and colonization per cell
    for(i in 1:nsite){
        persistMean[i] <- sum(persist[i,1:nyear])/nyear
        colonizeMean[i] <- sum(colonize[i,1:nyear])/nyear
    }
    
    # State model priors
    
    ##########################################
    #year 1 spatial effects
    
    #intercept
    mu ~ dnorm(0,0.1)
    
    #r.a random effects for naturraum
    for (s in 1:nraum) {
      r.a[s] ~ dnorm(0, tau.r.a)       
    } 
    tau.r.a <- 1/(sd.r.a * sd.r.a)
    sd.r.a ~ dt(0, 1, 1)T(0,)

    ######################################
    #temporal intercepts

    int.c ~ dnorm(0,0.1)
    int.p ~ dnorm(0,0.1)

    #spatial random effects - natur raum
    for (s in 1:nraum) {
      r.p[s] ~ dnorm(0, tau.r.p)       
    } 
    tau.r.p <- 1/(sd.r.p * sd.r.p)
    sd.r.p ~ dt(0, 1, 1)T(0,)

    for (s in 1:nraum) {
      r.c[s] ~ dnorm(0, tau.r.c)       
    } 
    tau.r.c <- 1/(sd.r.c * sd.r.c)
    sd.r.c ~ dt(0, 1, 1)T(0,)

    #year effects - random effects
    tau.muphi <- 1/(sd.muphi * sd.muphi)
    tau.mugam <- 1/(sd.mugam * sd.mugam)
    sd.muphi ~ dt(0, 1, 1)T(0,)
    sd.mugam ~ dt(0, 1, 1)T(0,)
    for(i in 1:(nyear-1)){
      muphi[i] ~ dnorm(0,tau.muphi)
      mugam[i] ~ dnorm(0,tau.mugam)
    }
    
    #year by naturraum
    
    for (s in 1:nraum) {
    i.year.persist[s,1] ~ dnorm(0,0.01)
      for(t in 2:(nyear-1)){
        i.year.persist[s,t] ~ dnorm(i.year.persist[s,t-1], tau.ir.p)       
      } 
    }
    tau.ir.p <- 1/(sd.ir.p * sd.ir.p)
    sd.ir.p ~ dt(0, 1, 1)T(0,)
    
    
    for (s in 1:nraum) {
    i.year.colonize[s,1] ~ dnorm(0,0.01)
      for (t in 2:(nyear-1)){
        i.year.colonize[s,t] ~ dnorm(i.year.colonize[s,t-1], tau.ir.c)       
      } 
    }
    tau.ir.c <- 1/(sd.ir.c * sd.ir.c)
    sd.ir.c ~ dt(0, 1, 1)T(0,)

    #####################################################

    #Observation model priors
    
    #intercept
    int.dp ~ dnorm(0,0.1)

    #random year effects
    for(t in 1:nyear){
      mup[t]  ~ dnorm(0,tautp)
    }
    tautp <- 1/(sdtp * sdtp)
    sdtp ~ dt(0, 1, 1)T(0,)

    #naturraum-level variaion 
    sd.taup ~ dt(0, 1, 1)T(0,)
    tau.taup <- 1/(sd.taup * sd.taup)
    for(s in 1:nraum){
      lp[s]  ~ dnorm(0,tau.taup)
    }

    #effort effects
    effort.p ~ dnorm(0, 0.1)
    single.p ~ dnorm(0, 0.1)
    
    #random slopes for phenology
    for(s in 1:nraum){
      phenol.s[s] ~ dnorm(mu.phenol, tau.phenol)
      phenol2.s[s] ~ dnorm(mu.phenol2, tau.phenol2)
    }
    mu.phenol ~ dnorm(0,0.1)
    mu.phenol2 ~ dnorm(0,0.1)
    tau.phenol <- 1/(sd.phenol * sd.phenol)
    tau.phenol2 <- 1/(sd.phenol2 * sd.phenol2)
    sd.phenol ~ dt(0, 1, 1)T(0,)
    sd.phenol2 ~ dt(0, 1, 1)T(0,) 

    #################################################

    #splines
    #spline model for initial occupancy
    eta <- X %*% b
    K1 <- S1[1:nspline,1:nspline] * lambda[1]  + S1[1:nspline,nspline1:nspline2] * lambda[2]
    b[1:nspline] ~ dmnorm(zero[1:nspline],K1) 
    
    ## smoothing parameter priors 
    for (i in 1:2) {
      lambda[i] ~ dgamma(.05,.005)
      rho[i] <- log(lambda[i])
    }

    #spline model for persistence
    eta.persist <- X %*% b.p
    K1.p <- S1[1:nspline,1:nspline] * lambda.p[1]  + S1[1:nspline,nspline1:nspline2] * lambda.p[2]
    b.p[1:nspline] ~ dmnorm(zero[1:nspline],K1.p)  
    
    ## smoothing parameter priors
    for (i in 1:2) {
      lambda.p[i] ~ dgamma(.05,.005)
      rho.p[i] <- log(lambda.p[i])
    }

    #spline model for colonization
    eta.colonize <- X %*% b.c
    K1.c <- S1[1:nspline,1:nspline] * lambda.c[1]  + S1[1:nspline,nspline1:nspline2] * lambda.c[2]
    b.c[1:nspline] ~ dmnorm(zero[1:nspline],K1.c)  
    
    ## smoothing parameter priors 
    for (i in 1:2) {
      lambda.c[i] ~ dgamma(.05,.005)
      rho.c[i] <- log(lambda.c[i])
    }

    
    }
    
